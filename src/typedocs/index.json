{
	"id": 0,
	"name": "merrykit",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1379,
			"name": "\"components/Button/index\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/components/Button/index.tsx",
			"children": [
				{
					"id": 1380,
					"name": "ButtonProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1416,
							"name": "about",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1771,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1416,
								"name": "HTMLAttributes.about"
							}
						},
						{
							"id": 1398,
							"name": "accessKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1747,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1398,
								"name": "HTMLAttributes.accessKey"
							}
						},
						{
							"id": 1438,
							"name": "aria-activedescendant",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1554,
									"character": 31
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1438,
								"name": "AriaAttributes.'aria-activedescendant'"
							}
						},
						{
							"id": 1439,
							"name": "aria-atomic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1556,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1439,
								"name": "AriaAttributes.'aria-atomic'"
							}
						},
						{
							"id": 1440,
							"name": "aria-autocomplete",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1561,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "none"
									},
									{
										"type": "stringLiteral",
										"value": "inline"
									},
									{
										"type": "stringLiteral",
										"value": "list"
									},
									{
										"type": "stringLiteral",
										"value": "both"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1440,
								"name": "AriaAttributes.'aria-autocomplete'"
							}
						},
						{
							"id": 1441,
							"name": "aria-busy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1563,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1441,
								"name": "AriaAttributes.'aria-busy'"
							}
						},
						{
							"id": 1442,
							"name": "aria-checked",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-pressed @see aria-selected.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1568,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "mixed"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1442,
								"name": "AriaAttributes.'aria-checked'"
							}
						},
						{
							"id": 1443,
							"name": "aria-colcount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-colindex.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1573,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1443,
								"name": "AriaAttributes.'aria-colcount'"
							}
						},
						{
							"id": 1444,
							"name": "aria-colindex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-colcount @see aria-colspan.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1578,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1444,
								"name": "AriaAttributes.'aria-colindex'"
							}
						},
						{
							"id": 1445,
							"name": "aria-colspan",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-colindex @see aria-rowspan.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1583,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1445,
								"name": "AriaAttributes.'aria-colspan'"
							}
						},
						{
							"id": 1446,
							"name": "aria-controls",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-owns.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1588,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1446,
								"name": "AriaAttributes.'aria-controls'"
							}
						},
						{
							"id": 1447,
							"name": "aria-current",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates the element that represents the current item within a container or set of related elements."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1590,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									},
									{
										"type": "stringLiteral",
										"value": "page"
									},
									{
										"type": "stringLiteral",
										"value": "step"
									},
									{
										"type": "stringLiteral",
										"value": "location"
									},
									{
										"type": "stringLiteral",
										"value": "date"
									},
									{
										"type": "stringLiteral",
										"value": "time"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1447,
								"name": "AriaAttributes.'aria-current'"
							}
						},
						{
							"id": 1448,
							"name": "aria-describedby",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Identifies the element (or elements) that describes the object.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-labelledby\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1595,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1448,
								"name": "AriaAttributes.'aria-describedby'"
							}
						},
						{
							"id": 1449,
							"name": "aria-details",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Identifies the element that provides a detailed, extended description for the object.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-describedby.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1600,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1449,
								"name": "AriaAttributes.'aria-details'"
							}
						},
						{
							"id": 1450,
							"name": "aria-disabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-hidden @see aria-readonly.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1605,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1450,
								"name": "AriaAttributes.'aria-disabled'"
							}
						},
						{
							"id": 1451,
							"name": "aria-dropeffect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
								"tags": [
									{
										"tag": "deprecated",
										"text": "in ARIA 1.1\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1610,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "none"
									},
									{
										"type": "stringLiteral",
										"value": "copy"
									},
									{
										"type": "stringLiteral",
										"value": "execute"
									},
									{
										"type": "stringLiteral",
										"value": "link"
									},
									{
										"type": "stringLiteral",
										"value": "move"
									},
									{
										"type": "stringLiteral",
										"value": "popup"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1451,
								"name": "AriaAttributes.'aria-dropeffect'"
							}
						},
						{
							"id": 1452,
							"name": "aria-errormessage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Identifies the element that provides an error message for the object.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-invalid @see aria-describedby.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1615,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1452,
								"name": "AriaAttributes.'aria-errormessage'"
							}
						},
						{
							"id": 1453,
							"name": "aria-expanded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1617,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1453,
								"name": "AriaAttributes.'aria-expanded'"
							}
						},
						{
							"id": 1454,
							"name": "aria-flowto",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1622,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1454,
								"name": "AriaAttributes.'aria-flowto'"
							}
						},
						{
							"id": 1455,
							"name": "aria-grabbed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
								"tags": [
									{
										"tag": "deprecated",
										"text": "in ARIA 1.1\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1627,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1455,
								"name": "AriaAttributes.'aria-grabbed'"
							}
						},
						{
							"id": 1456,
							"name": "aria-haspopup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1629,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									},
									{
										"type": "stringLiteral",
										"value": "menu"
									},
									{
										"type": "stringLiteral",
										"value": "listbox"
									},
									{
										"type": "stringLiteral",
										"value": "tree"
									},
									{
										"type": "stringLiteral",
										"value": "grid"
									},
									{
										"type": "stringLiteral",
										"value": "dialog"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1456,
								"name": "AriaAttributes.'aria-haspopup'"
							}
						},
						{
							"id": 1457,
							"name": "aria-hidden",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether the element is exposed to an accessibility API.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-disabled.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1634,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1457,
								"name": "AriaAttributes.'aria-hidden'"
							}
						},
						{
							"id": 1458,
							"name": "aria-invalid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates the entered value does not conform to the format expected by the application.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-errormessage.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1639,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									},
									{
										"type": "stringLiteral",
										"value": "grammar"
									},
									{
										"type": "stringLiteral",
										"value": "spelling"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1458,
								"name": "AriaAttributes.'aria-invalid'"
							}
						},
						{
							"id": 1459,
							"name": "aria-keyshortcuts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1641,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1459,
								"name": "AriaAttributes.'aria-keyshortcuts'"
							}
						},
						{
							"id": 1460,
							"name": "aria-label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines a string value that labels the current element.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-labelledby.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1646,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1460,
								"name": "AriaAttributes.'aria-label'"
							}
						},
						{
							"id": 1461,
							"name": "aria-labelledby",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Identifies the element (or elements) that labels the current element.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-describedby.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1651,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1461,
								"name": "AriaAttributes.'aria-labelledby'"
							}
						},
						{
							"id": 1462,
							"name": "aria-level",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the hierarchical level of an element within a structure."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1653,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1462,
								"name": "AriaAttributes.'aria-level'"
							}
						},
						{
							"id": 1463,
							"name": "aria-live",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1655,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "off"
									},
									{
										"type": "stringLiteral",
										"value": "assertive"
									},
									{
										"type": "stringLiteral",
										"value": "polite"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1463,
								"name": "AriaAttributes.'aria-live'"
							}
						},
						{
							"id": 1464,
							"name": "aria-modal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether an element is modal when displayed."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1657,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1464,
								"name": "AriaAttributes.'aria-modal'"
							}
						},
						{
							"id": 1465,
							"name": "aria-multiline",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1659,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1465,
								"name": "AriaAttributes.'aria-multiline'"
							}
						},
						{
							"id": 1466,
							"name": "aria-multiselectable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1661,
									"character": 30
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1466,
								"name": "AriaAttributes.'aria-multiselectable'"
							}
						},
						{
							"id": 1467,
							"name": "aria-orientation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1663,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "horizontal"
									},
									{
										"type": "stringLiteral",
										"value": "vertical"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1467,
								"name": "AriaAttributes.'aria-orientation'"
							}
						},
						{
							"id": 1468,
							"name": "aria-owns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-controls.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1669,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1468,
								"name": "AriaAttributes.'aria-owns'"
							}
						},
						{
							"id": 1469,
							"name": "aria-placeholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1674,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1469,
								"name": "AriaAttributes.'aria-placeholder'"
							}
						},
						{
							"id": 1470,
							"name": "aria-posinset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-setsize.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1679,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1470,
								"name": "AriaAttributes.'aria-posinset'"
							}
						},
						{
							"id": 1471,
							"name": "aria-pressed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-checked @see aria-selected.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1684,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "mixed"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1471,
								"name": "AriaAttributes.'aria-pressed'"
							}
						},
						{
							"id": 1472,
							"name": "aria-readonly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates that the element is not editable, but is otherwise operable.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-disabled.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1689,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1472,
								"name": "AriaAttributes.'aria-readonly'"
							}
						},
						{
							"id": 1473,
							"name": "aria-relevant",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-atomic.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1694,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "additions"
									},
									{
										"type": "stringLiteral",
										"value": "additions text"
									},
									{
										"type": "stringLiteral",
										"value": "all"
									},
									{
										"type": "stringLiteral",
										"value": "removals"
									},
									{
										"type": "stringLiteral",
										"value": "text"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1473,
								"name": "AriaAttributes.'aria-relevant'"
							}
						},
						{
							"id": 1474,
							"name": "aria-required",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates that user input is required on the element before a form may be submitted."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1696,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1474,
								"name": "AriaAttributes.'aria-required'"
							}
						},
						{
							"id": 1475,
							"name": "aria-roledescription",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines a human-readable, author-localized description for the role of an element."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1698,
									"character": 30
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1475,
								"name": "AriaAttributes.'aria-roledescription'"
							}
						},
						{
							"id": 1476,
							"name": "aria-rowcount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-rowindex.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1703,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1476,
								"name": "AriaAttributes.'aria-rowcount'"
							}
						},
						{
							"id": 1477,
							"name": "aria-rowindex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-rowcount @see aria-rowspan.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1708,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1477,
								"name": "AriaAttributes.'aria-rowindex'"
							}
						},
						{
							"id": 1478,
							"name": "aria-rowspan",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-rowindex @see aria-colspan.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1713,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1478,
								"name": "AriaAttributes.'aria-rowspan'"
							}
						},
						{
							"id": 1479,
							"name": "aria-selected",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates the current \"selected\" state of various widgets.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-checked @see aria-pressed.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1718,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1479,
								"name": "AriaAttributes.'aria-selected'"
							}
						},
						{
							"id": 1480,
							"name": "aria-setsize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-posinset.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1723,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1480,
								"name": "AriaAttributes.'aria-setsize'"
							}
						},
						{
							"id": 1481,
							"name": "aria-sort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1725,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "none"
									},
									{
										"type": "stringLiteral",
										"value": "ascending"
									},
									{
										"type": "stringLiteral",
										"value": "descending"
									},
									{
										"type": "stringLiteral",
										"value": "other"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1481,
								"name": "AriaAttributes.'aria-sort'"
							}
						},
						{
							"id": 1482,
							"name": "aria-valuemax",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the maximum allowed value for a range widget."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1727,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1482,
								"name": "AriaAttributes.'aria-valuemax'"
							}
						},
						{
							"id": 1483,
							"name": "aria-valuemin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the minimum allowed value for a range widget."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1729,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1483,
								"name": "AriaAttributes.'aria-valuemin'"
							}
						},
						{
							"id": 1484,
							"name": "aria-valuenow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the current value for a range widget.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-valuetext.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1734,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1484,
								"name": "AriaAttributes.'aria-valuenow'"
							}
						},
						{
							"id": 1485,
							"name": "aria-valuetext",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1736,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1485,
								"name": "AriaAttributes.'aria-valuetext'"
							}
						},
						{
							"id": 1424,
							"name": "autoCapitalize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1781,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1424,
								"name": "HTMLAttributes.autoCapitalize"
							}
						},
						{
							"id": 1425,
							"name": "autoCorrect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1782,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1425,
								"name": "HTMLAttributes.autoCorrect"
							}
						},
						{
							"id": 1383,
							"name": "autoFocus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1954,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1383,
								"name": "ButtonHTMLAttributes.autoFocus"
							}
						},
						{
							"id": 1426,
							"name": "autoSave",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1783,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1426,
								"name": "HTMLAttributes.autoSave"
							}
						},
						{
							"id": 1486,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1344,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1486,
								"name": "DOMAttributes.children"
							}
						},
						{
							"id": 1399,
							"name": "className",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1748,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1399,
								"name": "HTMLAttributes.className"
							}
						},
						{
							"id": 1427,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1784,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1427,
								"name": "HTMLAttributes.color"
							}
						},
						{
							"id": 1400,
							"name": "contentEditable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1749,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Booleanish"
									},
									{
										"type": "stringLiteral",
										"value": "inherit"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1400,
								"name": "HTMLAttributes.contentEditable"
							}
						},
						{
							"id": 1401,
							"name": "contextMenu",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1750,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1401,
								"name": "HTMLAttributes.contextMenu"
							}
						},
						{
							"id": 1487,
							"name": "dangerouslySetInnerHTML",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1345,
									"character": 31
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1488,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1489,
													"name": "__html",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 1346,
															"character": 18
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1489
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1487,
								"name": "DOMAttributes.dangerouslySetInnerHTML"
							}
						},
						{
							"id": 1417,
							"name": "datatype",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1772,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1417,
								"name": "HTMLAttributes.datatype"
							}
						},
						{
							"id": 1394,
							"name": "defaultChecked",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1741,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1394,
								"name": "HTMLAttributes.defaultChecked"
							}
						},
						{
							"id": 1395,
							"name": "defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1742,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1395,
								"name": "HTMLAttributes.defaultValue"
							}
						},
						{
							"id": 1402,
							"name": "dir",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1751,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1402,
								"name": "HTMLAttributes.dir"
							}
						},
						{
							"id": 1384,
							"name": "disabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1955,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1384,
								"name": "ButtonHTMLAttributes.disabled"
							}
						},
						{
							"id": 1403,
							"name": "draggable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1752,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "Booleanish"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1403,
								"name": "HTMLAttributes.draggable"
							}
						},
						{
							"id": 1385,
							"name": "form",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1956,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1385,
								"name": "ButtonHTMLAttributes.form"
							}
						},
						{
							"id": 1386,
							"name": "formAction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1957,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1386,
								"name": "ButtonHTMLAttributes.formAction"
							}
						},
						{
							"id": 1387,
							"name": "formEncType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1958,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1387,
								"name": "ButtonHTMLAttributes.formEncType"
							}
						},
						{
							"id": 1388,
							"name": "formMethod",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1959,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1388,
								"name": "ButtonHTMLAttributes.formMethod"
							}
						},
						{
							"id": 1389,
							"name": "formNoValidate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1960,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1389,
								"name": "ButtonHTMLAttributes.formNoValidate"
							}
						},
						{
							"id": 1390,
							"name": "formTarget",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1961,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1390,
								"name": "ButtonHTMLAttributes.formTarget"
							}
						},
						{
							"id": 1404,
							"name": "hidden",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1753,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1404,
								"name": "HTMLAttributes.hidden"
							}
						},
						{
							"id": 1405,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1754,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1405,
								"name": "HTMLAttributes.id"
							}
						},
						{
							"id": 1418,
							"name": "inlist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1773,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1418,
								"name": "HTMLAttributes.inlist"
							}
						},
						{
							"id": 1436,
							"name": "inputMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
								"tags": [
									{
										"tag": "see",
										"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1799,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "none"
									},
									{
										"type": "stringLiteral",
										"value": "text"
									},
									{
										"type": "stringLiteral",
										"value": "tel"
									},
									{
										"type": "stringLiteral",
										"value": "url"
									},
									{
										"type": "stringLiteral",
										"value": "email"
									},
									{
										"type": "stringLiteral",
										"value": "numeric"
									},
									{
										"type": "stringLiteral",
										"value": "decimal"
									},
									{
										"type": "stringLiteral",
										"value": "search"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1436,
								"name": "HTMLAttributes.inputMode"
							}
						},
						{
							"id": 1437,
							"name": "is",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
								"tags": [
									{
										"tag": "see",
										"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1804,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1437,
								"name": "HTMLAttributes.is"
							}
						},
						{
							"id": 1431,
							"name": "itemID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1788,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1431,
								"name": "HTMLAttributes.itemID"
							}
						},
						{
							"id": 1428,
							"name": "itemProp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1785,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1428,
								"name": "HTMLAttributes.itemProp"
							}
						},
						{
							"id": 1432,
							"name": "itemRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1789,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1432,
								"name": "HTMLAttributes.itemRef"
							}
						},
						{
							"id": 1429,
							"name": "itemScope",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1786,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1429,
								"name": "HTMLAttributes.itemScope"
							}
						},
						{
							"id": 1430,
							"name": "itemType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1787,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1430,
								"name": "HTMLAttributes.itemType"
							}
						},
						{
							"id": 1381,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/components/Button/index.tsx",
									"line": 13,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "default"
									},
									{
										"type": "stringLiteral",
										"value": "secondary"
									}
								]
							}
						},
						{
							"id": 1406,
							"name": "lang",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1755,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1406,
								"name": "HTMLAttributes.lang"
							}
						},
						{
							"id": 1382,
							"name": "loading",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/components/Button/index.tsx",
									"line": 14,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 1391,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1962,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1391,
								"name": "ButtonHTMLAttributes.name"
							}
						},
						{
							"id": 1528,
							"name": "onAbort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1400,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1528,
								"name": "DOMAttributes.onAbort"
							}
						},
						{
							"id": 1529,
							"name": "onAbortCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1401,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1529,
								"name": "DOMAttributes.onAbortCapture"
							}
						},
						{
							"id": 1644,
							"name": "onAnimationEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1530,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1644,
								"name": "DOMAttributes.onAnimationEnd"
							}
						},
						{
							"id": 1645,
							"name": "onAnimationEndCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1531,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1645,
								"name": "DOMAttributes.onAnimationEndCapture"
							}
						},
						{
							"id": 1646,
							"name": "onAnimationIteration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1532,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1646,
								"name": "DOMAttributes.onAnimationIteration"
							}
						},
						{
							"id": 1647,
							"name": "onAnimationIterationCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1533,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1647,
								"name": "DOMAttributes.onAnimationIterationCapture"
							}
						},
						{
							"id": 1642,
							"name": "onAnimationStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1528,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1642,
								"name": "DOMAttributes.onAnimationStart"
							}
						},
						{
							"id": 1643,
							"name": "onAnimationStartCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1529,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1643,
								"name": "DOMAttributes.onAnimationStartCapture"
							}
						},
						{
							"id": 1572,
							"name": "onAuxClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1446,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1572,
								"name": "DOMAttributes.onAuxClick"
							}
						},
						{
							"id": 1573,
							"name": "onAuxClickCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1447,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1573,
								"name": "DOMAttributes.onAuxClickCapture"
							}
						},
						{
							"id": 1508,
							"name": "onBeforeInput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1374,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1508,
								"name": "DOMAttributes.onBeforeInput"
							}
						},
						{
							"id": 1509,
							"name": "onBeforeInputCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1375,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1509,
								"name": "DOMAttributes.onBeforeInputCapture"
							}
						},
						{
							"id": 1504,
							"name": "onBlur",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1368,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1504,
								"name": "DOMAttributes.onBlur"
							}
						},
						{
							"id": 1505,
							"name": "onBlurCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1369,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1505,
								"name": "DOMAttributes.onBlurCapture"
							}
						},
						{
							"id": 1530,
							"name": "onCanPlay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1402,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1530,
								"name": "DOMAttributes.onCanPlay"
							}
						},
						{
							"id": 1531,
							"name": "onCanPlayCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1403,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1531,
								"name": "DOMAttributes.onCanPlayCapture"
							}
						},
						{
							"id": 1532,
							"name": "onCanPlayThrough",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1404,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1532,
								"name": "DOMAttributes.onCanPlayThrough"
							}
						},
						{
							"id": 1533,
							"name": "onCanPlayThroughCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1405,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1533,
								"name": "DOMAttributes.onCanPlayThroughCapture"
							}
						},
						{
							"id": 1506,
							"name": "onChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1372,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1506,
								"name": "DOMAttributes.onChange"
							}
						},
						{
							"id": 1507,
							"name": "onChangeCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1373,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1507,
								"name": "DOMAttributes.onChangeCapture"
							}
						},
						{
							"id": 1574,
							"name": "onClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1448,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1574,
								"name": "DOMAttributes.onClick"
							}
						},
						{
							"id": 1575,
							"name": "onClickCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1449,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1575,
								"name": "DOMAttributes.onClickCapture"
							}
						},
						{
							"id": 1496,
							"name": "onCompositionEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1358,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1496,
								"name": "DOMAttributes.onCompositionEnd"
							}
						},
						{
							"id": 1497,
							"name": "onCompositionEndCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1359,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1497,
								"name": "DOMAttributes.onCompositionEndCapture"
							}
						},
						{
							"id": 1498,
							"name": "onCompositionStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1360,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1498,
								"name": "DOMAttributes.onCompositionStart"
							}
						},
						{
							"id": 1499,
							"name": "onCompositionStartCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1361,
									"character": 33
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1499,
								"name": "DOMAttributes.onCompositionStartCapture"
							}
						},
						{
							"id": 1500,
							"name": "onCompositionUpdate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1362,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1500,
								"name": "DOMAttributes.onCompositionUpdate"
							}
						},
						{
							"id": 1501,
							"name": "onCompositionUpdateCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1363,
									"character": 34
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1501,
								"name": "DOMAttributes.onCompositionUpdateCapture"
							}
						},
						{
							"id": 1576,
							"name": "onContextMenu",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1450,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1576,
								"name": "DOMAttributes.onContextMenu"
							}
						},
						{
							"id": 1577,
							"name": "onContextMenuCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1451,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1577,
								"name": "DOMAttributes.onContextMenuCapture"
							}
						},
						{
							"id": 1490,
							"name": "onCopy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1350,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1490,
								"name": "DOMAttributes.onCopy"
							}
						},
						{
							"id": 1491,
							"name": "onCopyCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1351,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1491,
								"name": "DOMAttributes.onCopyCapture"
							}
						},
						{
							"id": 1492,
							"name": "onCut",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1352,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1492,
								"name": "DOMAttributes.onCut"
							}
						},
						{
							"id": 1493,
							"name": "onCutCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1353,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1493,
								"name": "DOMAttributes.onCutCapture"
							}
						},
						{
							"id": 1578,
							"name": "onDoubleClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1452,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1578,
								"name": "DOMAttributes.onDoubleClick"
							}
						},
						{
							"id": 1579,
							"name": "onDoubleClickCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1453,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1579,
								"name": "DOMAttributes.onDoubleClickCapture"
							}
						},
						{
							"id": 1580,
							"name": "onDrag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1454,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1580,
								"name": "DOMAttributes.onDrag"
							}
						},
						{
							"id": 1581,
							"name": "onDragCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1455,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1581,
								"name": "DOMAttributes.onDragCapture"
							}
						},
						{
							"id": 1582,
							"name": "onDragEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1456,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1582,
								"name": "DOMAttributes.onDragEnd"
							}
						},
						{
							"id": 1583,
							"name": "onDragEndCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1457,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1583,
								"name": "DOMAttributes.onDragEndCapture"
							}
						},
						{
							"id": 1584,
							"name": "onDragEnter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1458,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1584,
								"name": "DOMAttributes.onDragEnter"
							}
						},
						{
							"id": 1585,
							"name": "onDragEnterCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1459,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1585,
								"name": "DOMAttributes.onDragEnterCapture"
							}
						},
						{
							"id": 1586,
							"name": "onDragExit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1460,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1586,
								"name": "DOMAttributes.onDragExit"
							}
						},
						{
							"id": 1587,
							"name": "onDragExitCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1461,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1587,
								"name": "DOMAttributes.onDragExitCapture"
							}
						},
						{
							"id": 1588,
							"name": "onDragLeave",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1462,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1588,
								"name": "DOMAttributes.onDragLeave"
							}
						},
						{
							"id": 1589,
							"name": "onDragLeaveCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1463,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1589,
								"name": "DOMAttributes.onDragLeaveCapture"
							}
						},
						{
							"id": 1590,
							"name": "onDragOver",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1464,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1590,
								"name": "DOMAttributes.onDragOver"
							}
						},
						{
							"id": 1591,
							"name": "onDragOverCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1465,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1591,
								"name": "DOMAttributes.onDragOverCapture"
							}
						},
						{
							"id": 1592,
							"name": "onDragStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1466,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1592,
								"name": "DOMAttributes.onDragStart"
							}
						},
						{
							"id": 1593,
							"name": "onDragStartCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1467,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1593,
								"name": "DOMAttributes.onDragStartCapture"
							}
						},
						{
							"id": 1594,
							"name": "onDrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1468,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1594,
								"name": "DOMAttributes.onDrop"
							}
						},
						{
							"id": 1595,
							"name": "onDropCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1469,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1595,
								"name": "DOMAttributes.onDropCapture"
							}
						},
						{
							"id": 1534,
							"name": "onDurationChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1406,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1534,
								"name": "DOMAttributes.onDurationChange"
							}
						},
						{
							"id": 1535,
							"name": "onDurationChangeCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1407,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1535,
								"name": "DOMAttributes.onDurationChangeCapture"
							}
						},
						{
							"id": 1536,
							"name": "onEmptied",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1408,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1536,
								"name": "DOMAttributes.onEmptied"
							}
						},
						{
							"id": 1537,
							"name": "onEmptiedCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1409,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1537,
								"name": "DOMAttributes.onEmptiedCapture"
							}
						},
						{
							"id": 1538,
							"name": "onEncrypted",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1410,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1538,
								"name": "DOMAttributes.onEncrypted"
							}
						},
						{
							"id": 1539,
							"name": "onEncryptedCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1411,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1539,
								"name": "DOMAttributes.onEncryptedCapture"
							}
						},
						{
							"id": 1540,
							"name": "onEnded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1412,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1540,
								"name": "DOMAttributes.onEnded"
							}
						},
						{
							"id": 1541,
							"name": "onEndedCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1413,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1541,
								"name": "DOMAttributes.onEndedCapture"
							}
						},
						{
							"id": 1520,
							"name": "onError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1388,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1520,
								"name": "DOMAttributes.onError"
							}
						},
						{
							"id": 1521,
							"name": "onErrorCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1389,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1521,
								"name": "DOMAttributes.onErrorCapture"
							}
						},
						{
							"id": 1502,
							"name": "onFocus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1366,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1502,
								"name": "DOMAttributes.onFocus"
							}
						},
						{
							"id": 1503,
							"name": "onFocusCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1367,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1503,
								"name": "DOMAttributes.onFocusCapture"
							}
						},
						{
							"id": 1634,
							"name": "onGotPointerCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1514,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1634,
								"name": "DOMAttributes.onGotPointerCapture"
							}
						},
						{
							"id": 1635,
							"name": "onGotPointerCaptureCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1515,
									"character": 34
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1635,
								"name": "DOMAttributes.onGotPointerCaptureCapture"
							}
						},
						{
							"id": 1510,
							"name": "onInput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1376,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1510,
								"name": "DOMAttributes.onInput"
							}
						},
						{
							"id": 1511,
							"name": "onInputCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1377,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1511,
								"name": "DOMAttributes.onInputCapture"
							}
						},
						{
							"id": 1516,
							"name": "onInvalid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1382,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1516,
								"name": "DOMAttributes.onInvalid"
							}
						},
						{
							"id": 1517,
							"name": "onInvalidCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1383,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1517,
								"name": "DOMAttributes.onInvalidCapture"
							}
						},
						{
							"id": 1522,
							"name": "onKeyDown",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1392,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1522,
								"name": "DOMAttributes.onKeyDown"
							}
						},
						{
							"id": 1523,
							"name": "onKeyDownCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1393,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1523,
								"name": "DOMAttributes.onKeyDownCapture"
							}
						},
						{
							"id": 1524,
							"name": "onKeyPress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1394,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1524,
								"name": "DOMAttributes.onKeyPress"
							}
						},
						{
							"id": 1525,
							"name": "onKeyPressCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1395,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1525,
								"name": "DOMAttributes.onKeyPressCapture"
							}
						},
						{
							"id": 1526,
							"name": "onKeyUp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1396,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1526,
								"name": "DOMAttributes.onKeyUp"
							}
						},
						{
							"id": 1527,
							"name": "onKeyUpCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1397,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1527,
								"name": "DOMAttributes.onKeyUpCapture"
							}
						},
						{
							"id": 1518,
							"name": "onLoad",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1386,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1518,
								"name": "DOMAttributes.onLoad"
							}
						},
						{
							"id": 1519,
							"name": "onLoadCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1387,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1519,
								"name": "DOMAttributes.onLoadCapture"
							}
						},
						{
							"id": 1546,
							"name": "onLoadStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1418,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1546,
								"name": "DOMAttributes.onLoadStart"
							}
						},
						{
							"id": 1547,
							"name": "onLoadStartCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1419,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1547,
								"name": "DOMAttributes.onLoadStartCapture"
							}
						},
						{
							"id": 1542,
							"name": "onLoadedData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1414,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1542,
								"name": "DOMAttributes.onLoadedData"
							}
						},
						{
							"id": 1543,
							"name": "onLoadedDataCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1415,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1543,
								"name": "DOMAttributes.onLoadedDataCapture"
							}
						},
						{
							"id": 1544,
							"name": "onLoadedMetadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1416,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1544,
								"name": "DOMAttributes.onLoadedMetadata"
							}
						},
						{
							"id": 1545,
							"name": "onLoadedMetadataCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1417,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1545,
								"name": "DOMAttributes.onLoadedMetadataCapture"
							}
						},
						{
							"id": 1636,
							"name": "onLostPointerCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1516,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1636,
								"name": "DOMAttributes.onLostPointerCapture"
							}
						},
						{
							"id": 1637,
							"name": "onLostPointerCaptureCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1517,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1637,
								"name": "DOMAttributes.onLostPointerCaptureCapture"
							}
						},
						{
							"id": 1596,
							"name": "onMouseDown",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1470,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1596,
								"name": "DOMAttributes.onMouseDown"
							}
						},
						{
							"id": 1597,
							"name": "onMouseDownCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1471,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1597,
								"name": "DOMAttributes.onMouseDownCapture"
							}
						},
						{
							"id": 1598,
							"name": "onMouseEnter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1472,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1598,
								"name": "DOMAttributes.onMouseEnter"
							}
						},
						{
							"id": 1599,
							"name": "onMouseLeave",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1473,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1599,
								"name": "DOMAttributes.onMouseLeave"
							}
						},
						{
							"id": 1600,
							"name": "onMouseMove",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1474,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1600,
								"name": "DOMAttributes.onMouseMove"
							}
						},
						{
							"id": 1601,
							"name": "onMouseMoveCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1475,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1601,
								"name": "DOMAttributes.onMouseMoveCapture"
							}
						},
						{
							"id": 1602,
							"name": "onMouseOut",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1476,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1602,
								"name": "DOMAttributes.onMouseOut"
							}
						},
						{
							"id": 1603,
							"name": "onMouseOutCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1477,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1603,
								"name": "DOMAttributes.onMouseOutCapture"
							}
						},
						{
							"id": 1604,
							"name": "onMouseOver",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1478,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1604,
								"name": "DOMAttributes.onMouseOver"
							}
						},
						{
							"id": 1605,
							"name": "onMouseOverCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1479,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1605,
								"name": "DOMAttributes.onMouseOverCapture"
							}
						},
						{
							"id": 1606,
							"name": "onMouseUp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1480,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1606,
								"name": "DOMAttributes.onMouseUp"
							}
						},
						{
							"id": 1607,
							"name": "onMouseUpCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1481,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1607,
								"name": "DOMAttributes.onMouseUpCapture"
							}
						},
						{
							"id": 1494,
							"name": "onPaste",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1354,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1494,
								"name": "DOMAttributes.onPaste"
							}
						},
						{
							"id": 1495,
							"name": "onPasteCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1355,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1495,
								"name": "DOMAttributes.onPasteCapture"
							}
						},
						{
							"id": 1548,
							"name": "onPause",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1420,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1548,
								"name": "DOMAttributes.onPause"
							}
						},
						{
							"id": 1549,
							"name": "onPauseCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1421,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1549,
								"name": "DOMAttributes.onPauseCapture"
							}
						},
						{
							"id": 1550,
							"name": "onPlay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1422,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1550,
								"name": "DOMAttributes.onPlay"
							}
						},
						{
							"id": 1551,
							"name": "onPlayCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1423,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1551,
								"name": "DOMAttributes.onPlayCapture"
							}
						},
						{
							"id": 1552,
							"name": "onPlaying",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1424,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1552,
								"name": "DOMAttributes.onPlaying"
							}
						},
						{
							"id": 1553,
							"name": "onPlayingCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1425,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1553,
								"name": "DOMAttributes.onPlayingCapture"
							}
						},
						{
							"id": 1624,
							"name": "onPointerCancel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1504,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1624,
								"name": "DOMAttributes.onPointerCancel"
							}
						},
						{
							"id": 1625,
							"name": "onPointerCancelCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1505,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1625,
								"name": "DOMAttributes.onPointerCancelCapture"
							}
						},
						{
							"id": 1618,
							"name": "onPointerDown",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1498,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1618,
								"name": "DOMAttributes.onPointerDown"
							}
						},
						{
							"id": 1619,
							"name": "onPointerDownCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1499,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1619,
								"name": "DOMAttributes.onPointerDownCapture"
							}
						},
						{
							"id": 1626,
							"name": "onPointerEnter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1506,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1626,
								"name": "DOMAttributes.onPointerEnter"
							}
						},
						{
							"id": 1627,
							"name": "onPointerEnterCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1507,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1627,
								"name": "DOMAttributes.onPointerEnterCapture"
							}
						},
						{
							"id": 1628,
							"name": "onPointerLeave",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1508,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1628,
								"name": "DOMAttributes.onPointerLeave"
							}
						},
						{
							"id": 1629,
							"name": "onPointerLeaveCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1509,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1629,
								"name": "DOMAttributes.onPointerLeaveCapture"
							}
						},
						{
							"id": 1620,
							"name": "onPointerMove",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1500,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1620,
								"name": "DOMAttributes.onPointerMove"
							}
						},
						{
							"id": 1621,
							"name": "onPointerMoveCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1501,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1621,
								"name": "DOMAttributes.onPointerMoveCapture"
							}
						},
						{
							"id": 1632,
							"name": "onPointerOut",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1512,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1632,
								"name": "DOMAttributes.onPointerOut"
							}
						},
						{
							"id": 1633,
							"name": "onPointerOutCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1513,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1633,
								"name": "DOMAttributes.onPointerOutCapture"
							}
						},
						{
							"id": 1630,
							"name": "onPointerOver",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1510,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1630,
								"name": "DOMAttributes.onPointerOver"
							}
						},
						{
							"id": 1631,
							"name": "onPointerOverCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1511,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1631,
								"name": "DOMAttributes.onPointerOverCapture"
							}
						},
						{
							"id": 1622,
							"name": "onPointerUp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1502,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1622,
								"name": "DOMAttributes.onPointerUp"
							}
						},
						{
							"id": 1623,
							"name": "onPointerUpCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1503,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1623,
								"name": "DOMAttributes.onPointerUpCapture"
							}
						},
						{
							"id": 1554,
							"name": "onProgress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1426,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1554,
								"name": "DOMAttributes.onProgress"
							}
						},
						{
							"id": 1555,
							"name": "onProgressCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1427,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1555,
								"name": "DOMAttributes.onProgressCapture"
							}
						},
						{
							"id": 1556,
							"name": "onRateChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1428,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1556,
								"name": "DOMAttributes.onRateChange"
							}
						},
						{
							"id": 1557,
							"name": "onRateChangeCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1429,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1557,
								"name": "DOMAttributes.onRateChangeCapture"
							}
						},
						{
							"id": 1512,
							"name": "onReset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1378,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1512,
								"name": "DOMAttributes.onReset"
							}
						},
						{
							"id": 1513,
							"name": "onResetCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1379,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1513,
								"name": "DOMAttributes.onResetCapture"
							}
						},
						{
							"id": 1638,
							"name": "onScroll",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1520,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1638,
								"name": "DOMAttributes.onScroll"
							}
						},
						{
							"id": 1639,
							"name": "onScrollCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1521,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1639,
								"name": "DOMAttributes.onScrollCapture"
							}
						},
						{
							"id": 1558,
							"name": "onSeeked",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1430,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1558,
								"name": "DOMAttributes.onSeeked"
							}
						},
						{
							"id": 1559,
							"name": "onSeekedCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1431,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1559,
								"name": "DOMAttributes.onSeekedCapture"
							}
						},
						{
							"id": 1560,
							"name": "onSeeking",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1432,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1560,
								"name": "DOMAttributes.onSeeking"
							}
						},
						{
							"id": 1561,
							"name": "onSeekingCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1433,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1561,
								"name": "DOMAttributes.onSeekingCapture"
							}
						},
						{
							"id": 1608,
							"name": "onSelect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1484,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1608,
								"name": "DOMAttributes.onSelect"
							}
						},
						{
							"id": 1609,
							"name": "onSelectCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1485,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1609,
								"name": "DOMAttributes.onSelectCapture"
							}
						},
						{
							"id": 1562,
							"name": "onStalled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1434,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1562,
								"name": "DOMAttributes.onStalled"
							}
						},
						{
							"id": 1563,
							"name": "onStalledCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1435,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1563,
								"name": "DOMAttributes.onStalledCapture"
							}
						},
						{
							"id": 1514,
							"name": "onSubmit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1380,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1514,
								"name": "DOMAttributes.onSubmit"
							}
						},
						{
							"id": 1515,
							"name": "onSubmitCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1381,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1515,
								"name": "DOMAttributes.onSubmitCapture"
							}
						},
						{
							"id": 1564,
							"name": "onSuspend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1436,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1564,
								"name": "DOMAttributes.onSuspend"
							}
						},
						{
							"id": 1565,
							"name": "onSuspendCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1437,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1565,
								"name": "DOMAttributes.onSuspendCapture"
							}
						},
						{
							"id": 1566,
							"name": "onTimeUpdate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1438,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1566,
								"name": "DOMAttributes.onTimeUpdate"
							}
						},
						{
							"id": 1567,
							"name": "onTimeUpdateCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1439,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1567,
								"name": "DOMAttributes.onTimeUpdateCapture"
							}
						},
						{
							"id": 1610,
							"name": "onTouchCancel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1488,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1610,
								"name": "DOMAttributes.onTouchCancel"
							}
						},
						{
							"id": 1611,
							"name": "onTouchCancelCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1489,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1611,
								"name": "DOMAttributes.onTouchCancelCapture"
							}
						},
						{
							"id": 1612,
							"name": "onTouchEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1490,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1612,
								"name": "DOMAttributes.onTouchEnd"
							}
						},
						{
							"id": 1613,
							"name": "onTouchEndCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1491,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1613,
								"name": "DOMAttributes.onTouchEndCapture"
							}
						},
						{
							"id": 1614,
							"name": "onTouchMove",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1492,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1614,
								"name": "DOMAttributes.onTouchMove"
							}
						},
						{
							"id": 1615,
							"name": "onTouchMoveCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1493,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1615,
								"name": "DOMAttributes.onTouchMoveCapture"
							}
						},
						{
							"id": 1616,
							"name": "onTouchStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1494,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1616,
								"name": "DOMAttributes.onTouchStart"
							}
						},
						{
							"id": 1617,
							"name": "onTouchStartCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1495,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1617,
								"name": "DOMAttributes.onTouchStartCapture"
							}
						},
						{
							"id": 1648,
							"name": "onTransitionEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1536,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1648,
								"name": "DOMAttributes.onTransitionEnd"
							}
						},
						{
							"id": 1649,
							"name": "onTransitionEndCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1537,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1649,
								"name": "DOMAttributes.onTransitionEndCapture"
							}
						},
						{
							"id": 1568,
							"name": "onVolumeChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1440,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1568,
								"name": "DOMAttributes.onVolumeChange"
							}
						},
						{
							"id": 1569,
							"name": "onVolumeChangeCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1441,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1569,
								"name": "DOMAttributes.onVolumeChangeCapture"
							}
						},
						{
							"id": 1570,
							"name": "onWaiting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1442,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1570,
								"name": "DOMAttributes.onWaiting"
							}
						},
						{
							"id": 1571,
							"name": "onWaitingCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1443,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1571,
								"name": "DOMAttributes.onWaitingCapture"
							}
						},
						{
							"id": 1640,
							"name": "onWheel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1524,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1640,
								"name": "DOMAttributes.onWheel"
							}
						},
						{
							"id": 1641,
							"name": "onWheelCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1525,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLButtonElement"
									}
								],
								"name": "WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1641,
								"name": "DOMAttributes.onWheelCapture"
							}
						},
						{
							"id": 1407,
							"name": "placeholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1756,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1407,
								"name": "HTMLAttributes.placeholder"
							}
						},
						{
							"id": 1419,
							"name": "prefix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1774,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1419,
								"name": "HTMLAttributes.prefix"
							}
						},
						{
							"id": 1420,
							"name": "property",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1775,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1420,
								"name": "HTMLAttributes.property"
							}
						},
						{
							"id": 1414,
							"name": "radioGroup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1765,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1414,
								"name": "HTMLAttributes.radioGroup"
							}
						},
						{
							"id": 1421,
							"name": "resource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1776,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1421,
								"name": "HTMLAttributes.resource"
							}
						},
						{
							"id": 1433,
							"name": "results",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1790,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1433,
								"name": "HTMLAttributes.results"
							}
						},
						{
							"id": 1415,
							"name": "role",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1768,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1415,
								"name": "HTMLAttributes.role"
							}
						},
						{
							"id": 1434,
							"name": "security",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1791,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1434,
								"name": "HTMLAttributes.security"
							}
						},
						{
							"id": 1408,
							"name": "slot",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1757,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1408,
								"name": "HTMLAttributes.slot"
							}
						},
						{
							"id": 1409,
							"name": "spellCheck",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1758,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Booleanish"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1409,
								"name": "HTMLAttributes.spellCheck"
							}
						},
						{
							"id": 1410,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1759,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "CSSProperties"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1410,
								"name": "HTMLAttributes.style"
							}
						},
						{
							"id": 1396,
							"name": "suppressContentEditableWarning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1743,
									"character": 38
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1396,
								"name": "HTMLAttributes.suppressContentEditableWarning"
							}
						},
						{
							"id": 1397,
							"name": "suppressHydrationWarning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1744,
									"character": 32
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1397,
								"name": "HTMLAttributes.suppressHydrationWarning"
							}
						},
						{
							"id": 1411,
							"name": "tabIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1760,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1411,
								"name": "HTMLAttributes.tabIndex"
							}
						},
						{
							"id": 1412,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1761,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1412,
								"name": "HTMLAttributes.title"
							}
						},
						{
							"id": 1413,
							"name": "translate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1762,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "yes"
									},
									{
										"type": "stringLiteral",
										"value": "no"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1413,
								"name": "HTMLAttributes.translate"
							}
						},
						{
							"id": 1392,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1963,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "submit"
									},
									{
										"type": "stringLiteral",
										"value": "reset"
									},
									{
										"type": "stringLiteral",
										"value": "button"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1392,
								"name": "ButtonHTMLAttributes.type"
							}
						},
						{
							"id": 1422,
							"name": "typeof",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1777,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1422,
								"name": "HTMLAttributes.typeof"
							}
						},
						{
							"id": 1435,
							"name": "unselectable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1792,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "on"
									},
									{
										"type": "stringLiteral",
										"value": "off"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1435,
								"name": "HTMLAttributes.unselectable"
							}
						},
						{
							"id": 1393,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1964,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1393,
								"name": "ButtonHTMLAttributes.value"
							}
						},
						{
							"id": 1423,
							"name": "vocab",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 1778,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1423,
								"name": "HTMLAttributes.vocab"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1416,
								1398,
								1438,
								1439,
								1440,
								1441,
								1442,
								1443,
								1444,
								1445,
								1446,
								1447,
								1448,
								1449,
								1450,
								1451,
								1452,
								1453,
								1454,
								1455,
								1456,
								1457,
								1458,
								1459,
								1460,
								1461,
								1462,
								1463,
								1464,
								1465,
								1466,
								1467,
								1468,
								1469,
								1470,
								1471,
								1472,
								1473,
								1474,
								1475,
								1476,
								1477,
								1478,
								1479,
								1480,
								1481,
								1482,
								1483,
								1484,
								1485,
								1424,
								1425,
								1383,
								1426,
								1486,
								1399,
								1427,
								1400,
								1401,
								1487,
								1417,
								1394,
								1395,
								1402,
								1384,
								1403,
								1385,
								1386,
								1387,
								1388,
								1389,
								1390,
								1404,
								1405,
								1418,
								1436,
								1437,
								1431,
								1428,
								1432,
								1429,
								1430,
								1381,
								1406,
								1382,
								1391,
								1528,
								1529,
								1644,
								1645,
								1646,
								1647,
								1642,
								1643,
								1572,
								1573,
								1508,
								1509,
								1504,
								1505,
								1530,
								1531,
								1532,
								1533,
								1506,
								1507,
								1574,
								1575,
								1496,
								1497,
								1498,
								1499,
								1500,
								1501,
								1576,
								1577,
								1490,
								1491,
								1492,
								1493,
								1578,
								1579,
								1580,
								1581,
								1582,
								1583,
								1584,
								1585,
								1586,
								1587,
								1588,
								1589,
								1590,
								1591,
								1592,
								1593,
								1594,
								1595,
								1534,
								1535,
								1536,
								1537,
								1538,
								1539,
								1540,
								1541,
								1520,
								1521,
								1502,
								1503,
								1634,
								1635,
								1510,
								1511,
								1516,
								1517,
								1522,
								1523,
								1524,
								1525,
								1526,
								1527,
								1518,
								1519,
								1546,
								1547,
								1542,
								1543,
								1544,
								1545,
								1636,
								1637,
								1596,
								1597,
								1598,
								1599,
								1600,
								1601,
								1602,
								1603,
								1604,
								1605,
								1606,
								1607,
								1494,
								1495,
								1548,
								1549,
								1550,
								1551,
								1552,
								1553,
								1624,
								1625,
								1618,
								1619,
								1626,
								1627,
								1628,
								1629,
								1620,
								1621,
								1632,
								1633,
								1630,
								1631,
								1622,
								1623,
								1554,
								1555,
								1556,
								1557,
								1512,
								1513,
								1638,
								1639,
								1558,
								1559,
								1560,
								1561,
								1608,
								1609,
								1562,
								1563,
								1514,
								1515,
								1564,
								1565,
								1566,
								1567,
								1610,
								1611,
								1612,
								1613,
								1614,
								1615,
								1616,
								1617,
								1648,
								1649,
								1568,
								1569,
								1570,
								1571,
								1640,
								1641,
								1407,
								1419,
								1420,
								1414,
								1421,
								1433,
								1415,
								1434,
								1408,
								1409,
								1410,
								1396,
								1397,
								1411,
								1412,
								1413,
								1392,
								1422,
								1435,
								1393,
								1423
							]
						}
					],
					"sources": [
						{
							"fileName": "src/components/Button/index.tsx",
							"line": 12,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "HTMLButtonElement"
								}
							],
							"name": "ButtonHTMLAttributes"
						}
					]
				},
				{
					"id": 1651,
					"name": "DESKTOP_HEIGHT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/Button/index.tsx",
							"line": 7,
							"character": 20
						}
					],
					"type": {
						"type": "unknown",
						"name": "48"
					},
					"defaultValue": "48"
				},
				{
					"id": 1654,
					"name": "DESKTOP_LINE_HEIGHT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/Button/index.tsx",
							"line": 10,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "DESKTOP_HEIGHT - TOP_PADDING"
				},
				{
					"id": 1650,
					"name": "MOBILE_HEIGHT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/Button/index.tsx",
							"line": 6,
							"character": 19
						}
					],
					"type": {
						"type": "unknown",
						"name": "44"
					},
					"defaultValue": "44"
				},
				{
					"id": 1653,
					"name": "MOBILE_LINE_HEIGHT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/Button/index.tsx",
							"line": 9,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "MOBILE_HEIGHT - TOP_PADDING"
				},
				{
					"id": 1669,
					"name": "StyledButton",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/Button/index.tsx",
							"line": 47,
							"character": 18
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "stringLiteral",
										"value": "button"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1670,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"name": "StyledComponentBase"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1671,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						]
					},
					"defaultValue": "styled.button<Omit<ButtonProps, 'children'>>`\n  border: 0;\n  box-sizing: border-box;\n  font-family: ${FontFamilies.MONTSERRAT};\n  font-size: 16px;\n  font-weight: ${FontWeights.MONTSERRAT_SEMI_BOLD};\n  height: ${MOBILE_HEIGHT}px;\n  line-height: ${MOBILE_LINE_HEIGHT}px;\n  margin: 0;\n  padding: 0;\n  padding-top: ${TOP_PADDING}px;\n  text-align: center;\n\n  ${MEDIA_QUERY.desktopMin} {\n    height: ${DESKTOP_HEIGHT}px;\n    line-height: ${DESKTOP_LINE_HEIGHT}px;\n  }\n\n  :focus {\n    outline: none;\n  }\n\n  :hover {\n    border: 0;\n    cursor: ${({ loading }) => loading ? 'not-allowed' : 'pointer'};\n  }\n\n  :disabled {\n    cursor: not-allowed;\n  }\n\n  ${({ kind, loading }) => {\n    switch (kind) {\n      case 'secondary':\n        return css`\n          ${spacing2css({ paddingX: 0.25 })};\n          background: none;\n          color: ${Colors.GREY_100};\n          letter-spacing: 0.06em;\n          position: relative;\n\n          &::before,\n          &::after {\n            border-radius: 1px;\n            content: '';\n            display: block;\n            height: 2px;\n            position: absolute;\n            top: 36px;\n            transition: ${AnimationDurations.DEFAULT}ms ease-in;\n          }\n\n          &::before {\n            background-color: ${Colors.GREY_100};\n            left: 0;\n            right: 0;\n            transition-delay: ${AnimationDelay.DEFAULT}ms;\n          }\n\n          &::after {\n            background: ${GRADIENTS.button};\n            left: 100%;\n            right: 0;\n          }\n\n          :disabled {\n            ${secondaryDisabledStyles}\n          }\n\n          ${loading ? secondaryDisabledStyles : `\n            :not(:disabled) {\n              :focus::before,\n              :hover::before {\n                right: 100%;\n                transition-delay: 0ms;\n              }\n\n              :focus::after,\n              :hover::after {\n                left: 0;\n                transition-delay: ${AnimationDelay.DEFAULT}ms;\n              }\n            }\n          `}\n        `;\n        break;\n\n      default:\n        return css`\n          background: ${GRADIENTS.button};\n          border-radius: ${MOBILE_HEIGHT / 2}px;\n          box-shadow: 0 0 0 0 transparent;\n          color: ${Colors.WHITE};\n          letter-spacing: 0.02em;\n          min-width: 180px;\n          overflow: hidden;\n          position: relative;\n\n          ${MEDIA_QUERY.desktopMin} {\n            border-radius: ${DESKTOP_HEIGHT / 2}px;\n            min-width: 200px;\n          }\n\n          :disabled {\n            background: ${Colors.GREY_010};\n            box-shadow: 0 0 0 5px ${Colors.GREY_030_050};\n            color: ${Colors.GREY_030};\n          }\n\n          &::before,\n          &::after {\n            content: '';\n            display: block;\n            height: ${DESKTOP_HEIGHT * 3}px;\n            position: absolute;\n            top: -100%;\n            transform: rotate(39deg);\n            width: 0;\n            z-index: 0;\n          }\n\n          &,\n          &::before,\n          &::after {\n            transition: ${AnimationDurations.DEFAULT}ms ease-in;\n          }\n\n          &::before {\n            background-color: ${Colors.PRIMARY};\n            left: 0;\n          }\n\n          &::after {\n            background-color: ${Colors.PRIMARY_DARK};\n            right: 0;\n          }\n\n          ${loading ? '' : `\n            :not(:disabled):focus,\n            :not(:disabled):hover {\n              box-shadow: 0 0 0 8px ${Colors.PRIMARY_LIGHT_075};\n\n              &::before,\n              &::after {\n                width: 50%;\n              }\n            }\n          `}\n        `;\n    }\n  }}\n`"
				},
				{
					"id": 1672,
					"name": "StyledButtonSpan",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/Button/index.tsx",
							"line": 200,
							"character": 22
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "stringLiteral",
										"value": "span"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1673,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"name": "StyledComponentBase"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1674,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						]
					},
					"defaultValue": "styled.span`\n  position: relative;\n  z-index: 1;\n`"
				},
				{
					"id": 1675,
					"name": "StyledSpinnerContainer",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/Button/index.tsx",
							"line": 205,
							"character": 28
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "stringLiteral",
										"value": "span"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1676,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"name": "StyledComponentBase"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1677,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						]
					},
					"defaultValue": "styled.span`\n  display: inline-block;\n  height: 36px;\n  width: 36px;\n`"
				},
				{
					"id": 1652,
					"name": "TOP_PADDING",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/Button/index.tsx",
							"line": 8,
							"character": 17
						}
					],
					"type": {
						"type": "unknown",
						"name": "2"
					},
					"defaultValue": "2"
				},
				{
					"id": 1668,
					"name": "secondaryDisabledStyles",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/Button/index.tsx",
							"line": 39,
							"character": 29
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "`\n  color: ${Colors.GREY_030};\n\n  &::before {\n    background-color: ${Colors.GREY_030};\n  }\n`"
				},
				{
					"id": 1655,
					"name": "Button",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Buttons.  Things to clicks 👆"
					},
					"signatures": [
						{
							"id": 1656,
							"name": "Button",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Buttons.  Things to clicks 👆"
							},
							"parameters": [
								{
									"id": 1657,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"originalName": "__0",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1658,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1659,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/components/Button/index.tsx",
															"line": 21,
															"character": 10
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "null"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1660,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	}
																}
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1661,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {
																						"isExported": true
																					},
																					"signatures": [
																						{
																							"id": 1662,
																							"name": "__call",
																							"kind": 4096,
																							"kindString": "Call signature",
																							"flags": {
																								"isExported": true
																							},
																							"parameters": [
																								{
																									"id": 1663,
																									"name": "props",
																									"kind": 32768,
																									"kindString": "Parameter",
																									"flags": {
																										"isExported": true
																									},
																									"type": {
																										"type": "typeParameter",
																										"name": "P"
																									}
																								}
																							],
																							"type": {
																								"type": "union",
																								"types": [
																									{
																										"type": "reference",
																										"name": "ReactElement"
																									},
																									{
																										"type": "intrinsic",
																										"name": "null"
																									}
																								]
																							}
																						}
																					]
																				}
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1664,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {
																						"isExported": true
																					}
																				}
																			}
																		]
																	}
																],
																"name": "ReactElement"
															},
															{
																"type": "reference",
																"name": "ReactNodeArray"
															},
															{
																"type": "reference",
																"name": "ReactPortal"
															}
														]
													}
												},
												{
													"id": 1665,
													"name": "kind",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/components/Button/index.tsx",
															"line": 22,
															"character": 6
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "stringLiteral",
																"value": "default"
															},
															{
																"type": "stringLiteral",
																"value": "secondary"
															}
														]
													},
													"defaultValue": "\"default\""
												},
												{
													"id": 1666,
													"name": "loading",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/components/Button/index.tsx",
															"line": 23,
															"character": 9
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "false"
												},
												{
													"id": 1667,
													"name": "props",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/components/Button/index.tsx",
															"line": 24,
															"character": 10
														}
													],
													"type": {
														"type": "reference",
														"id": 1667,
														"name": "props"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1659,
														1665,
														1666,
														1667
													]
												}
											],
											"sources": [
												{
													"fileName": "src/components/Button/index.tsx",
													"line": 20,
													"character": 46
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/components/Button/index.tsx",
							"line": 20,
							"character": 19
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1380
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1651,
						1654,
						1650,
						1653,
						1669,
						1672,
						1675,
						1652,
						1668
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1655
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/Button/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1678,
			"name": "\"components/Divider/index\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/components/Divider/index.tsx",
			"children": [
				{
					"id": 1679,
					"name": "DividerProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1680,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/components/Divider/index.tsx",
									"line": 5,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"id": 54,
								"name": "Colors"
							}
						},
						{
							"id": 1682,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/components/Divider/index.tsx",
									"line": 7,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 15,
								"name": "BorderWidths"
							}
						},
						{
							"id": 1681,
							"name": "spacing",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/components/Divider/index.tsx",
									"line": 6,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 98,
								"name": "SpacingProps"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1680,
								1682,
								1681
							]
						}
					],
					"sources": [
						{
							"fileName": "src/components/Divider/index.tsx",
							"line": 4,
							"character": 29
						}
					]
				},
				{
					"id": 1683,
					"name": "Divider",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/Divider/index.tsx",
							"line": 10,
							"character": 20
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "stringLiteral",
										"value": "hr"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 1679,
										"name": "DividerProps"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"name": "StyledComponentBase"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1684,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									}
								}
							}
						]
					},
					"defaultValue": "styled.hr<DividerProps>`\n  ${({ color, spacing, size}) => css`\n    ${spacing ? spacing2css(spacing) : ''}\n    border: 0;\n    border-top: ${size || BorderWidths.SMALL} solid ${color || Colors.GREY_030};\n  `}\n`"
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1679
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1683
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/Divider/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1748,
			"name": "\"components/Text/index\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/components/Text/index.tsx",
			"children": [
				{
					"id": 1749,
					"name": "TextProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 1751,
							"name": "align",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/components/Text/index.tsx",
									"line": 7,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "left"
									},
									{
										"type": "stringLiteral",
										"value": "center"
									},
									{
										"type": "stringLiteral",
										"value": "right"
									}
								]
							}
						},
						{
							"id": 1750,
							"name": "as",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/components/Text/index.tsx",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "React.ElementType"
							}
						},
						{
							"id": 1752,
							"name": "casing",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/components/Text/index.tsx",
									"line": 8,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "uppercase"
									},
									{
										"type": "stringLiteral",
										"value": "lowercase"
									},
									{
										"type": "stringLiteral",
										"value": "capitalize"
									}
								]
							}
						},
						{
							"id": 1753,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/components/Text/index.tsx",
									"line": 9,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"id": 54,
								"name": "Colors"
							}
						},
						{
							"id": 1754,
							"name": "spacing",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/components/Text/index.tsx",
									"line": 10,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 98,
								"name": "SpacingProps"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1751,
								1750,
								1752,
								1753,
								1754
							]
						}
					],
					"sources": [
						{
							"fileName": "src/components/Text/index.tsx",
							"line": 5,
							"character": 26
						}
					]
				},
				{
					"id": 1765,
					"name": "Body",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/Text/index.tsx",
							"line": 113,
							"character": 17
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "stringLiteral",
										"value": "p"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 1749,
										"name": "TextProps"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"name": "StyledComponentBase"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1766,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									}
								}
							}
						]
					},
					"defaultValue": "styled.p<TextProps>`\n  margin: 0;\n  padding: 0;\n  ${({ spacing }) => spacing ? spacing2css(spacing) : ''}\n  ${({ align }) => align ? css`text-align: ${align};`: ''}\n  ${({ casing }) => casing ? css`text-transform: ${casing};`: ''}\n  color: ${({ color }) => color || Colors.GREY_090};\n  font-family: ${FontFamilies.MONTSERRAT};\n  font-size: 16px;\n  font-weight: ${FontWeights.MONTSERRAT_LIGHT};\n  line-height: 22px;\n\n  small {\n    font-size: 12px;\n    line-height: 17px;\n  }\n\n  strong,\n  small strong {\n    font-weight: ${FontWeights.MONTSERRAT_MEDIUM};\n  }\n`"
				},
				{
					"id": 1757,
					"name": "H1",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/Text/index.tsx",
							"line": 31,
							"character": 15
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "stringLiteral",
										"value": "h1"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 1749,
										"name": "TextProps"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"name": "StyledComponentBase"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1758,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									}
								}
							}
						]
					},
					"defaultValue": "styled.h1<TextProps>`\n  margin: 0;\n  padding: 0;\n  ${({ spacing }) => spacing ? spacing2css(spacing) : ''}\n  ${({ align }) => align ? css`text-align: ${align};`: ''}\n  ${({ casing }) => casing ? css`text-transform: ${casing};`: ''}\n  color: ${({ color }) => color || Colors.GREY_100};\n  font-family: ${FontFamilies.VOLLKORN};\n  font-size: 26px;\n  font-weight: ${FontWeights.VOLLKORN_BOLD},\n  line-height: 36px;\n\n  ${MEDIA_QUERY.desktopMin} {\n    font-size: 34px;\n    line-height: 48px;\n  }\n`"
				},
				{
					"id": 1759,
					"name": "H2",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/Text/index.tsx",
							"line": 49,
							"character": 15
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "stringLiteral",
										"value": "h2"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 1749,
										"name": "TextProps"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"name": "StyledComponentBase"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1760,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									}
								}
							}
						]
					},
					"defaultValue": "styled.h2<TextProps>`\n  margin: 0;\n  padding: 0;\n  ${({ spacing }) => spacing ? spacing2css(spacing) : ''}\n  ${({ align }) => align ? css`text-align: ${align};`: ''}\n  ${({ casing }) => casing ? css`text-transform: ${casing};`: ''}\n  color: ${({ color }) => color || Colors.GREY_100};\n  font-family: ${FontFamilies.VOLLKORN};\n  font-size: 22px;\n  font-weight: ${FontWeights.VOLLKORN_SEMI_BOLD};\n  line-height: 31px;\n\n  ${MEDIA_QUERY.desktopMin} {\n    font-size: 28px;\n    line-height: 39px;\n  }\n`"
				},
				{
					"id": 1761,
					"name": "H3",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/Text/index.tsx",
							"line": 67,
							"character": 15
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "stringLiteral",
										"value": "h3"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 1749,
										"name": "TextProps"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"name": "StyledComponentBase"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1762,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									}
								}
							}
						]
					},
					"defaultValue": "styled.h3<TextProps>`\n  margin: 0;\n  padding: 0;\n  ${({ spacing }) => spacing ? spacing2css(spacing) : ''}\n  ${({ align }) => align ? css`text-align: ${align};`: ''}\n  ${({ casing }) => casing ? css`text-transform: ${casing};`: ''}\n  color: ${({ color }) => color || Colors.GREY_090};\n  font-family: ${FontFamilies.MONTSERRAT};\n  font-size: 16px;\n  font-weight: ${FontWeights.MONTSERRAT_SEMI_BOLD};\n  letter-spacing: 0.06em;\n  line-height: 22px;\n  text-transform: uppercase;\n\n  ${MEDIA_QUERY.desktopMin} {\n    font-size: 18px;\n    font-weight: ${FontWeights.MONTSERRAT_BOLD};\n    line-height: 25px;\n  }\n`"
				},
				{
					"id": 1763,
					"name": "H4",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/Text/index.tsx",
							"line": 88,
							"character": 15
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "stringLiteral",
										"value": "h4"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 1749,
										"name": "TextProps"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"name": "StyledComponentBase"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1764,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									}
								}
							}
						]
					},
					"defaultValue": "styled.h4<TextProps>`\n  margin: 0;\n  padding: 0;\n  ${({ spacing }) => spacing ? spacing2css(spacing) : ''}\n  ${({ align }) => align ? css`text-align: ${align};`: ''}\n  ${({ casing }) => casing ? css`text-transform: ${casing};`: ''}\n  color: ${({ color }) => color || Colors.GREY_090};\n  font-family: ${FontFamilies.MONTSERRAT};\n  font-size: 16px;\n  font-weight: ${FontWeights.MONTSERRAT_MEDIUM};\n  letter-spacing: 0.06em;\n  line-height: 22px;\n  text-transform: uppercase;\n\n  ${MEDIA_QUERY.desktopMin} {\n    font-weight: ${FontWeights.MONTSERRAT_BOLD};\n  }\n\n  small {\n    font-weight: ${FontWeights.MONTSERRAT_BOLD};\n    font-size: 12px;\n    line-height: 17px;\n  }\n`"
				},
				{
					"id": 1767,
					"name": "Link",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/Text/index.tsx",
							"line": 136,
							"character": 17
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "stringLiteral",
										"value": "a"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 1749,
										"name": "TextProps"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"name": "StyledComponentBase"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1768,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									}
								}
							}
						]
					},
					"defaultValue": "styled.a<TextProps>`\n  margin: 0;\n  padding: 0;\n  ${({ spacing }) => spacing ? spacing2css(spacing) : ''}\n  ${({ align }) => align ? css`text-align: ${align};`: ''}\n  ${({ casing }) => casing ? css`text-transform: ${casing};`: ''}\n  color: ${({ color }) => color || Colors.SECONDARY};\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  line-height: inherit;\n  text-decoration: underline;\n  transition: 0.2s ease-in;\n\n  :active,\n  :focus,\n  :hover {\n    opacity: 0.6;\n  }\n\n  :visited {\n    opacity: 0.4;\n  }\n`"
				},
				{
					"id": 1755,
					"name": "Masthead",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/Text/index.tsx",
							"line": 13,
							"character": 21
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "stringLiteral",
										"value": "h1"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 1749,
										"name": "TextProps"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"name": "StyledComponentBase"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1756,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									}
								}
							}
						]
					},
					"defaultValue": "styled.h1<TextProps>`\n  margin: 0;\n  padding: 0;\n  ${({ spacing }) => spacing ? spacing2css(spacing) : ''}\n  ${({ align }) => align ? css`text-align: ${align};`: ''}\n  ${({ casing }) => casing ? css`text-transform: ${casing};`: ''}\n  color: ${({ color }) => color || Colors.BLACK};\n  font-family: ${FontFamilies.VOLLKORN_SC};\n  font-size: 32px;\n  font-weight: ${FontWeights.VOLLKORN_SC_BOLD};\n  line-height: 45px;\n\n  ${MEDIA_QUERY.desktopMin} {\n    font-size: 42px;\n    line-height: 59px;\n  }\n`"
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1749
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1765,
						1757,
						1759,
						1761,
						1763,
						1767,
						1755
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/Text/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1769,
			"name": "\"components/index\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/components/index.ts",
			"children": [
				{
					"id": 1792,
					"name": "Body",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1765
				},
				{
					"id": 1775,
					"name": "Box",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1686
				},
				{
					"id": 1774,
					"name": "BoxProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": -1
				},
				{
					"id": 1771,
					"name": "Button",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1655
				},
				{
					"id": 1770,
					"name": "ButtonProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1380
				},
				{
					"id": 1777,
					"name": "Container",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1692
				},
				{
					"id": 1776,
					"name": "ContainerProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": -1
				},
				{
					"id": 1773,
					"name": "Divider",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1683
				},
				{
					"id": 1772,
					"name": "DividerProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1679
				},
				{
					"id": 1779,
					"name": "Grid",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1704
				},
				{
					"id": 1778,
					"name": "GridProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": -1
				},
				{
					"id": 1788,
					"name": "H1",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1757
				},
				{
					"id": 1789,
					"name": "H2",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1759
				},
				{
					"id": 1790,
					"name": "H3",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1761
				},
				{
					"id": 1791,
					"name": "H4",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1763
				},
				{
					"id": 1781,
					"name": "Hidden",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1723
				},
				{
					"id": 1780,
					"name": "HiddenProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": -1
				},
				{
					"id": 1793,
					"name": "Link",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1767
				},
				{
					"id": 1784,
					"name": "Logo",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1742
				},
				{
					"id": 1783,
					"name": "LogoProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1738
				},
				{
					"id": 1782,
					"name": "LogoType",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1741
				},
				{
					"id": 1787,
					"name": "Masthead",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1755
				},
				{
					"id": 1785,
					"name": "Spinner",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1373
				},
				{
					"id": 1786,
					"name": "TextProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1749
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						1792,
						1775,
						1774,
						1771,
						1770,
						1777,
						1776,
						1773,
						1772,
						1779,
						1778,
						1788,
						1789,
						1790,
						1791,
						1781,
						1780,
						1793,
						1784,
						1783,
						1782,
						1787,
						1785,
						1786
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1685,
			"name": "\"components/layout/Box/index\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/components/layout/Box/index.tsx",
			"children": [
				{
					"id": 1686,
					"name": "Box",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 1687,
							"name": "Box",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1688,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"name": "BoxProps"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1689,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 1690,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/react/index.d.ts",
																	"line": 823,
																	"character": 46
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1690
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/components/layout/Box/index.tsx",
							"line": 5,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1686
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/layout/Box/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1691,
			"name": "\"components/layout/Container/index\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/components/layout/Container/index.tsx",
			"children": [
				{
					"id": 1692,
					"name": "Container",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 1693,
							"name": "Container",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1694,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1695,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 1696,
															"name": "disableGutters",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@material-ui/core/Container/Container.d.ts",
																	"line": 6,
																	"character": 18
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "false"
																	},
																	{
																		"type": "intrinsic",
																		"name": "true"
																	}
																]
															}
														},
														{
															"id": 1697,
															"name": "fixed",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@material-ui/core/Container/Container.d.ts",
																	"line": 7,
																	"character": 9
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "false"
																	},
																	{
																		"type": "intrinsic",
																		"name": "true"
																	}
																]
															}
														},
														{
															"id": 1698,
															"name": "maxWidth",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@material-ui/core/Container/Container.d.ts",
																	"line": 8,
																	"character": 12
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "stringLiteral",
																		"value": "xs"
																	},
																	{
																		"type": "stringLiteral",
																		"value": "sm"
																	},
																	{
																		"type": "stringLiteral",
																		"value": "md"
																	},
																	{
																		"type": "stringLiteral",
																		"value": "lg"
																	},
																	{
																		"type": "stringLiteral",
																		"value": "xl"
																	},
																	{
																		"type": "intrinsic",
																		"name": "false"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1696,
																1697,
																1698
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 1699,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	}
																}
															},
															{
																"type": "stringLiteral",
																"value": "div"
															}
														],
														"name": "ContainerTypeMap"
													}
												],
												"name": "CommonProps"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1700,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													}
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1701,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 1702,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/react/index.d.ts",
																	"line": 823,
																	"character": 46
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1702
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/components/layout/Container/index.tsx",
							"line": 5,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1692
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/layout/Container/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1703,
			"name": "\"components/layout/Grid/index\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/components/layout/Grid/index.tsx",
			"children": [
				{
					"id": 1704,
					"name": "Grid",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 1705,
							"name": "Grid",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1706,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1707,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													}
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1708,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 1709,
															"name": "alignContent",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@material-ui/core/Grid/Grid.d.ts",
																	"line": 83,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "GridContentAlignment"
															}
														},
														{
															"id": 1710,
															"name": "alignItems",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@material-ui/core/Grid/Grid.d.ts",
																	"line": 84,
																	"character": 16
																}
															],
															"type": {
																"type": "reference",
																"name": "GridItemsAlignment"
															}
														},
														{
															"id": 1711,
															"name": "container",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@material-ui/core/Grid/Grid.d.ts",
																	"line": 85,
																	"character": 15
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "false"
																	},
																	{
																		"type": "intrinsic",
																		"name": "true"
																	}
																]
															}
														},
														{
															"id": 1712,
															"name": "direction",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@material-ui/core/Grid/Grid.d.ts",
																	"line": 86,
																	"character": 15
																}
															],
															"type": {
																"type": "reference",
																"name": "GridDirection"
															}
														},
														{
															"id": 1713,
															"name": "item",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@material-ui/core/Grid/Grid.d.ts",
																	"line": 87,
																	"character": 10
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "false"
																	},
																	{
																		"type": "intrinsic",
																		"name": "true"
																	}
																]
															}
														},
														{
															"id": 1714,
															"name": "justify",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@material-ui/core/Grid/Grid.d.ts",
																	"line": 88,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "GridJustification"
															}
														},
														{
															"id": 1715,
															"name": "spacing",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@material-ui/core/Grid/Grid.d.ts",
																	"line": 89,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "GridSpacing"
															}
														},
														{
															"id": 1716,
															"name": "wrap",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@material-ui/core/Grid/Grid.d.ts",
																	"line": 90,
																	"character": 10
																}
															],
															"type": {
																"type": "reference",
																"name": "GridWrap"
															}
														},
														{
															"id": 1717,
															"name": "zeroMinWidth",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@material-ui/core/Grid/Grid.d.ts",
																	"line": 91,
																	"character": 18
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "false"
																	},
																	{
																		"type": "intrinsic",
																		"name": "true"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1709,
																1710,
																1711,
																1712,
																1713,
																1714,
																1715,
																1716,
																1717
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 1718,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	}
																}
															},
															{
																"type": "stringLiteral",
																"value": "div"
															}
														],
														"name": "GridTypeMap"
													}
												],
												"name": "CommonProps"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1719,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													}
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1720,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 1721,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/react/index.d.ts",
																	"line": 823,
																	"character": 46
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1721
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/components/layout/Grid/index.tsx",
							"line": 5,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1704
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/layout/Grid/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1722,
			"name": "\"components/layout/Hidden/index\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/components/layout/Hidden/index.tsx",
			"children": [
				{
					"id": 1723,
					"name": "Hidden",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 1724,
							"name": "Hidden",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1725,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"name": "HiddenProps"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1726,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 1727,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/react/index.d.ts",
																	"line": 823,
																	"character": 46
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1727
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/components/layout/Hidden/index.tsx",
							"line": 5,
							"character": 19
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1723
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/layout/Hidden/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1728,
			"name": "\"components/layout/index\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/components/layout/index.ts",
			"children": [
				{
					"id": 1730,
					"name": "Box",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1686
				},
				{
					"id": 1729,
					"name": "BoxProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": -1
				},
				{
					"id": 1732,
					"name": "Container",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1692
				},
				{
					"id": 1731,
					"name": "ContainerProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": -1
				},
				{
					"id": 1734,
					"name": "Grid",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1704
				},
				{
					"id": 1733,
					"name": "GridProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": -1
				},
				{
					"id": 1736,
					"name": "Hidden",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1723
				},
				{
					"id": 1735,
					"name": "HiddenProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": -1
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						1730,
						1729,
						1732,
						1731,
						1734,
						1733,
						1736,
						1735
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/layout/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1737,
			"name": "\"components/logo/index\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/components/logo/index.tsx",
			"children": [
				{
					"id": 1738,
					"name": "LogoProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1739,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/components/logo/index.tsx",
									"line": 7,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"id": 54,
								"name": "Colors"
							}
						},
						{
							"id": 1740,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/components/logo/index.tsx",
									"line": 8,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 1741,
								"name": "LogoType"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1739,
								1740
							]
						}
					],
					"sources": [
						{
							"fileName": "src/components/logo/index.tsx",
							"line": 6,
							"character": 26
						}
					]
				},
				{
					"id": 1741,
					"name": "LogoType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/logo/index.tsx",
							"line": 4,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "social"
							},
							{
								"type": "stringLiteral",
								"value": "icon"
							}
						]
					}
				},
				{
					"id": 1742,
					"name": "Logo",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 1743,
							"name": "Logo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1744,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"originalName": "__0",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1745,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1746,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/components/logo/index.tsx",
															"line": 11,
															"character": 28
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reference",
																"id": 55,
																"name": "TEA_ROSE"
															},
															{
																"type": "reference",
																"id": 56,
																"name": "SPANISH_PINK"
															},
															{
																"type": "reference",
																"id": 57,
																"name": "BEGONIA"
															},
															{
																"type": "reference",
																"id": 58,
																"name": "BLUE_GREEN"
															},
															{
																"type": "reference",
																"id": 59,
																"name": "SHINY_SHAMROCK"
															},
															{
																"type": "reference",
																"id": 60,
																"name": "MAXIMUM_YELLOW_RED"
															},
															{
																"type": "reference",
																"id": 61,
																"name": "ENGLISH_VERMILLION"
															},
															{
																"type": "reference",
																"id": 66,
																"name": "GREY_100"
															},
															{
																"type": "reference",
																"id": 67,
																"name": "GREY_090"
															},
															{
																"type": "reference",
																"id": 68,
																"name": "GREY_080"
															},
															{
																"type": "reference",
																"id": 69,
																"name": "GREY_050"
															},
															{
																"type": "reference",
																"id": 70,
																"name": "GREY_030"
															},
															{
																"type": "reference",
																"id": 71,
																"name": "GREY_010"
															},
															{
																"type": "reference",
																"id": 75,
																"name": "BLACK"
															},
															{
																"type": "reference",
																"id": 76,
																"name": "WHITE"
															},
															{
																"type": "reference",
																"id": 77,
																"name": "PRIMARY_LIGHT_075"
															},
															{
																"type": "reference",
																"id": 78,
																"name": "GREY_030_050"
															},
															{
																"type": "reference",
																"id": 79,
																"name": "WHITE_035"
															}
														]
													}
												},
												{
													"id": 1747,
													"name": "type",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/components/logo/index.tsx",
															"line": 11,
															"character": 34
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "stringLiteral",
																"value": "default"
															},
															{
																"type": "stringLiteral",
																"value": "social"
															},
															{
																"type": "stringLiteral",
																"value": "icon"
															}
														]
													},
													"defaultValue": "\"default\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1746,
														1747
													]
												}
											],
											"sources": [
												{
													"fileName": "src/components/logo/index.tsx",
													"line": 11,
													"character": 21
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/components/logo/index.tsx",
							"line": 11,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1738
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1741
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1742
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/logo/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1372,
			"name": "\"components/spinner/index\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/components/spinner/index.tsx",
			"children": [
				{
					"id": 1376,
					"name": "StyledSpinnerSvg",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/spinner/index.tsx",
							"line": 29,
							"character": 22
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "stringLiteral",
										"value": "svg"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1377,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"name": "StyledComponentBase"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1378,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						]
					},
					"defaultValue": "Styled.svg`\n  animation: ${spinningAnimation} ${AnimationDurations.SPINNER}ms linear infinite;\n`"
				},
				{
					"id": 1375,
					"name": "spinningAnimation",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/components/spinner/index.tsx",
							"line": 19,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "Keyframes"
					},
					"defaultValue": "keyframes`\n  from {\n    transform: rotate(0);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`"
				},
				{
					"id": 1373,
					"name": "Spinner",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 1374,
							"name": "Spinner",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/components/spinner/index.tsx",
							"line": 5,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1376,
						1375
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1373
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/spinner/index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"styles/animations\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/styles/animations.ts",
			"children": [
				{
					"id": 5,
					"name": "AnimationDelay",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 6,
							"name": "DEFAULT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/animations.ts",
									"line": 7,
									"character": 9
								}
							],
							"defaultValue": "150"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								6
							]
						}
					],
					"sources": [
						{
							"fileName": "src/styles/animations.ts",
							"line": 6,
							"character": 26
						}
					]
				},
				{
					"id": 2,
					"name": "AnimationDurations",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 3,
							"name": "DEFAULT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/animations.ts",
									"line": 2,
									"character": 9
								}
							],
							"defaultValue": "200"
						},
						{
							"id": 4,
							"name": "SPINNER",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/animations.ts",
									"line": 3,
									"character": 9
								}
							],
							"defaultValue": "700"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3,
								4
							]
						}
					],
					"sources": [
						{
							"fileName": "src/styles/animations.ts",
							"line": 1,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						5,
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "src/styles/animations.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 7,
			"name": "\"styles/borders\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/styles/borders.ts",
			"children": [
				{
					"id": 8,
					"name": "BorderRadii",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 13,
							"name": "LARGE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/borders.ts",
									"line": 6,
									"character": 7
								}
							],
							"defaultValue": "\"8px\""
						},
						{
							"id": 12,
							"name": "MEDIUM",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/borders.ts",
									"line": 5,
									"character": 8
								}
							],
							"defaultValue": "\"4px\""
						},
						{
							"id": 9,
							"name": "NONE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/borders.ts",
									"line": 2,
									"character": 6
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 11,
							"name": "SMALL",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/borders.ts",
									"line": 4,
									"character": 7
								}
							],
							"defaultValue": "\"2px\""
						},
						{
							"id": 14,
							"name": "X_LARGE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/borders.ts",
									"line": 7,
									"character": 9
								}
							],
							"defaultValue": "\"16px\""
						},
						{
							"id": 10,
							"name": "X_SMALL",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/borders.ts",
									"line": 3,
									"character": 9
								}
							],
							"defaultValue": "\"1px\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								13,
								12,
								9,
								11,
								14,
								10
							]
						}
					],
					"sources": [
						{
							"fileName": "src/styles/borders.ts",
							"line": 1,
							"character": 23
						}
					]
				},
				{
					"id": 15,
					"name": "BorderWidths",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 19,
							"name": "LARGE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/borders.ts",
									"line": 14,
									"character": 7
								}
							],
							"defaultValue": "\"3px\""
						},
						{
							"id": 18,
							"name": "MEDIUM",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/borders.ts",
									"line": 13,
									"character": 8
								}
							],
							"defaultValue": "\"2px\""
						},
						{
							"id": 16,
							"name": "NONE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/borders.ts",
									"line": 11,
									"character": 6
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 17,
							"name": "SMALL",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/borders.ts",
									"line": 12,
									"character": 7
								}
							],
							"defaultValue": "\"1px\""
						},
						{
							"id": 20,
							"name": "X_LARGE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/borders.ts",
									"line": 15,
									"character": 9
								}
							],
							"defaultValue": "\"4px\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								19,
								18,
								16,
								17,
								20
							]
						}
					],
					"sources": [
						{
							"fileName": "src/styles/borders.ts",
							"line": 10,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						8,
						15
					]
				}
			],
			"sources": [
				{
					"fileName": "src/styles/borders.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 21,
			"name": "\"styles/breakpoints\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/styles/breakpoints.ts",
			"children": [
				{
					"id": 22,
					"name": "Breakpoints",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 26,
							"name": "LARGE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 9,
									"character": 7
								}
							],
							"defaultValue": "1280"
						},
						{
							"id": 25,
							"name": "MEDIUM",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 8,
									"character": 8
								}
							],
							"defaultValue": "960"
						},
						{
							"id": 24,
							"name": "SMALL",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 7,
									"character": 7
								}
							],
							"defaultValue": "600"
						},
						{
							"id": 27,
							"name": "X_LARGE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 10,
									"character": 9
								}
							],
							"defaultValue": "1920"
						},
						{
							"id": 23,
							"name": "X_SMALL",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 6,
									"character": 9
								}
							],
							"defaultValue": "0"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								26,
								25,
								24,
								27,
								23
							]
						}
					],
					"sources": [
						{
							"fileName": "src/styles/breakpoints.ts",
							"line": 5,
							"character": 23
						}
					]
				},
				{
					"id": 34,
					"name": "between",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 35,
							"name": "between",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 36,
									"name": "minWidth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 37,
									"name": "maxWidth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/styles/breakpoints.ts",
							"line": 3,
							"character": 13
						}
					]
				},
				{
					"id": 31,
					"name": "down",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 32,
							"name": "down",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 33,
									"name": "maxWidth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/styles/breakpoints.ts",
							"line": 2,
							"character": 10
						}
					]
				},
				{
					"id": 28,
					"name": "up",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 29,
							"name": "up",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 30,
									"name": "minWidth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/styles/breakpoints.ts",
							"line": 1,
							"character": 8
						}
					]
				},
				{
					"id": 38,
					"name": "MEDIA_QUERY",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 41,
							"name": "customBetween",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 16,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 34,
								"name": "between"
							},
							"defaultValue": "between"
						},
						{
							"id": 40,
							"name": "customMax",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 15,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 31,
								"name": "down"
							},
							"defaultValue": "down"
						},
						{
							"id": 39,
							"name": "customMin",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 28,
								"name": "up"
							},
							"defaultValue": "up"
						},
						{
							"id": 51,
							"name": "desktop",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 26,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "between(Breakpoints.LARGE, Breakpoints.X_LARGE - 1)"
						},
						{
							"id": 50,
							"name": "desktopMax",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 25,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "down(Breakpoints.X_LARGE - 1)"
						},
						{
							"id": 49,
							"name": "desktopMin",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 24,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "up(Breakpoints.LARGE)"
						},
						{
							"id": 42,
							"name": "mobile",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 17,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "down(Breakpoints.SMALL - 1)"
						},
						{
							"id": 45,
							"name": "mobileLarge",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 20,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "between(Breakpoints.SMALL, Breakpoints.MEDIUM - 1)"
						},
						{
							"id": 44,
							"name": "mobileLargeMax",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 19,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "down(Breakpoints.MEDIUM -  1)"
						},
						{
							"id": 43,
							"name": "mobileLargeMin",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 18,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "up(Breakpoints.SMALL)"
						},
						{
							"id": 48,
							"name": "tablet",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "between(Breakpoints.MEDIUM, Breakpoints.LARGE - 1)"
						},
						{
							"id": 47,
							"name": "tabletMax",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 22,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "down(Breakpoints.LARGE - 1)"
						},
						{
							"id": 46,
							"name": "tabletMin",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 21,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "up(Breakpoints.MEDIUM)"
						},
						{
							"id": 52,
							"name": "wide",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/breakpoints.ts",
									"line": 27,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "up(Breakpoints.X_LARGE)"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								41,
								40,
								39,
								51,
								50,
								49,
								42,
								45,
								44,
								43,
								48,
								47,
								46,
								52
							]
						}
					],
					"sources": [
						{
							"fileName": "src/styles/breakpoints.ts",
							"line": 13,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						22
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						34,
						31,
						28
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						38
					]
				}
			],
			"sources": [
				{
					"fileName": "src/styles/breakpoints.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 53,
			"name": "\"styles/colors\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/styles/colors.ts",
			"children": [
				{
					"id": 54,
					"name": "Colors",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 57,
							"name": "BEGONIA",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 4,
									"character": 9
								}
							],
							"defaultValue": "\"#f56476\""
						},
						{
							"id": 75,
							"name": "BLACK",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 26,
									"character": 7
								}
							],
							"defaultValue": "\"#000000\""
						},
						{
							"id": 58,
							"name": "BLUE_GREEN",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 5,
									"character": 12
								}
							],
							"defaultValue": "\"#0fa3b1\""
						},
						{
							"id": 61,
							"name": "ENGLISH_VERMILLION",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 8,
									"character": 20
								}
							],
							"defaultValue": "\"#d33f49\""
						},
						{
							"id": 74,
							"name": "ERROR",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 24,
									"character": 7
								}
							],
							"defaultValue": "\"#d33f49\""
						},
						{
							"id": 71,
							"name": "GREY_010",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 20,
									"character": 10
								}
							],
							"defaultValue": "\"#f5f4f6\""
						},
						{
							"id": 70,
							"name": "GREY_030",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 19,
									"character": 10
								}
							],
							"defaultValue": "\"#c7c4ce\""
						},
						{
							"id": 78,
							"name": "GREY_030_050",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 30,
									"character": 14
								}
							],
							"defaultValue": "\"rgba(199, 196, 206, 0.5)\""
						},
						{
							"id": 69,
							"name": "GREY_050",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 18,
									"character": 10
								}
							],
							"defaultValue": "\"#97949e\""
						},
						{
							"id": 68,
							"name": "GREY_080",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 17,
									"character": 10
								}
							],
							"defaultValue": "\"#5d576b\""
						},
						{
							"id": 67,
							"name": "GREY_090",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 16,
									"character": 10
								}
							],
							"defaultValue": "\"#3d3947\""
						},
						{
							"id": 66,
							"name": "GREY_100",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 15,
									"character": 10
								}
							],
							"defaultValue": "\"#27242d\""
						},
						{
							"id": 60,
							"name": "MAXIMUM_YELLOW_RED",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 7,
									"character": 20
								}
							],
							"defaultValue": "\"#f9b84f\""
						},
						{
							"id": 62,
							"name": "PRIMARY",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 10,
									"character": 9
								}
							],
							"defaultValue": "\"#f97e77\""
						},
						{
							"id": 64,
							"name": "PRIMARY_DARK",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 12,
									"character": 14
								}
							],
							"defaultValue": "\"#f56476\""
						},
						{
							"id": 63,
							"name": "PRIMARY_LIGHT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 11,
									"character": 15
								}
							],
							"defaultValue": "\"#f9c0bd\""
						},
						{
							"id": 77,
							"name": "PRIMARY_LIGHT_075",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 29,
									"character": 19
								}
							],
							"defaultValue": "\"rgba(249, 192, 189, 0.75)\""
						},
						{
							"id": 65,
							"name": "SECONDARY",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 13,
									"character": 11
								}
							],
							"defaultValue": "\"#0fa3b1\""
						},
						{
							"id": 59,
							"name": "SHINY_SHAMROCK",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 6,
									"character": 16
								}
							],
							"defaultValue": "\"#60b269\""
						},
						{
							"id": 56,
							"name": "SPANISH_PINK",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 3,
									"character": 14
								}
							],
							"defaultValue": "\"#f9c0bd\""
						},
						{
							"id": 72,
							"name": "SUCCESS",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 22,
									"character": 9
								}
							],
							"defaultValue": "\"#60b269\""
						},
						{
							"id": 55,
							"name": "TEA_ROSE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 2,
									"character": 10
								}
							],
							"defaultValue": "\"#f97e77\""
						},
						{
							"id": 73,
							"name": "WARNING",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 23,
									"character": 9
								}
							],
							"defaultValue": "\"#f9b84f\""
						},
						{
							"id": 76,
							"name": "WHITE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 27,
									"character": 7
								}
							],
							"defaultValue": "\"#ffffff\""
						},
						{
							"id": 79,
							"name": "WHITE_035",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 31,
									"character": 11
								}
							],
							"defaultValue": "\"rgba(255, 255, 255, 0.35)\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								57,
								75,
								58,
								61,
								74,
								71,
								70,
								78,
								69,
								68,
								67,
								66,
								60,
								62,
								64,
								63,
								77,
								65,
								59,
								56,
								72,
								55,
								73,
								76,
								79
							]
						}
					],
					"sources": [
						{
							"fileName": "src/styles/colors.ts",
							"line": 1,
							"character": 18
						}
					]
				},
				{
					"id": 80,
					"name": "GRADIENTS",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 81,
							"name": "button",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 35,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "`linear-gradient(99.35deg, ${Colors.PRIMARY_LIGHT} -60.52%, ${Colors.PRIMARY} 10.84%, ${Colors.PRIMARY_DARK} 85.38%)`"
						},
						{
							"id": 82,
							"name": "stripe",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/colors.ts",
									"line": 36,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "`repeating-linear-gradient(\n    -35deg,\n    ${Colors.PRIMARY_DARK} 0 20px,\n    ${Colors.PRIMARY_LIGHT} 20px 40px,\n    ${Colors.SECONDARY} 40px 60px\n  )`"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								81,
								82
							]
						}
					],
					"sources": [
						{
							"fileName": "src/styles/colors.ts",
							"line": 34,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						54
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						80
					]
				}
			],
			"sources": [
				{
					"fileName": "src/styles/colors.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 83,
			"name": "\"styles/fonts\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/styles/fonts.ts",
			"children": [
				{
					"id": 84,
					"name": "FontFamilies",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 87,
							"name": "MONTSERRAT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/fonts.ts",
									"line": 6,
									"character": 12
								}
							],
							"defaultValue": "\"\"Montserrat\", sans-serif\""
						},
						{
							"id": 86,
							"name": "VOLLKORN",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/fonts.ts",
									"line": 5,
									"character": 10
								}
							],
							"defaultValue": "\"\"Vollkorn\", serif\""
						},
						{
							"id": 85,
							"name": "VOLLKORN_SC",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/fonts.ts",
									"line": 4,
									"character": 13
								}
							],
							"defaultValue": "\"\"Vollkorn SC\", serif\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								87,
								86,
								85
							]
						}
					],
					"sources": [
						{
							"fileName": "src/styles/fonts.ts",
							"line": 3,
							"character": 24
						}
					]
				},
				{
					"id": 88,
					"name": "FontWeights",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 95,
							"name": "MONTSERRAT_BOLD",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/fonts.ts",
									"line": 16,
									"character": 17
								}
							],
							"defaultValue": "700"
						},
						{
							"id": 92,
							"name": "MONTSERRAT_LIGHT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/fonts.ts",
									"line": 13,
									"character": 18
								}
							],
							"defaultValue": "300"
						},
						{
							"id": 93,
							"name": "MONTSERRAT_MEDIUM",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/fonts.ts",
									"line": 14,
									"character": 19
								}
							],
							"defaultValue": "500"
						},
						{
							"id": 94,
							"name": "MONTSERRAT_SEMI_BOLD",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/fonts.ts",
									"line": 15,
									"character": 22
								}
							],
							"defaultValue": "600"
						},
						{
							"id": 91,
							"name": "VOLLKORN_BOLD",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/fonts.ts",
									"line": 12,
									"character": 15
								}
							],
							"defaultValue": "700"
						},
						{
							"id": 89,
							"name": "VOLLKORN_SC_BOLD",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/fonts.ts",
									"line": 10,
									"character": 18
								}
							],
							"defaultValue": "700"
						},
						{
							"id": 90,
							"name": "VOLLKORN_SEMI_BOLD",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "src/styles/fonts.ts",
									"line": 11,
									"character": 20
								}
							],
							"defaultValue": "600"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								95,
								92,
								93,
								94,
								91,
								89,
								90
							]
						}
					],
					"sources": [
						{
							"fileName": "src/styles/fonts.ts",
							"line": 9,
							"character": 23
						}
					]
				},
				{
					"id": 96,
					"name": "GOOGLE_FONT_LINK",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/styles/fonts.ts",
							"line": 1,
							"character": 29
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,300;0,500;0,600;0,700;1,300;1,500&family=Vollkorn+SC:wght@700&family=Vollkorn:wght@600;700&display=swap"
					},
					"defaultValue": "\"https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,300;0,500;0,600;0,700;1,300;1,500&family=Vollkorn+SC:wght@700&family=Vollkorn:wght@600;700&display=swap\""
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						84,
						88
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						96
					]
				}
			],
			"sources": [
				{
					"fileName": "src/styles/fonts.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1357,
			"name": "\"styles/index\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/styles/index.ts",
			"children": [
				{
					"id": 1359,
					"name": "AnimationDelay",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 5
				},
				{
					"id": 1358,
					"name": "AnimationDurations",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 2
				},
				{
					"id": 1369,
					"name": "BASE_SPACING",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 113
				},
				{
					"id": 1360,
					"name": "BorderRadii",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 8
				},
				{
					"id": 1361,
					"name": "BorderWidths",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 15
				},
				{
					"id": 1362,
					"name": "Breakpoints",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 22
				},
				{
					"id": 1364,
					"name": "Colors",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 54
				},
				{
					"id": 1367,
					"name": "FontFamilies",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 84
				},
				{
					"id": 1368,
					"name": "FontWeights",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 88
				},
				{
					"id": 1366,
					"name": "GOOGLE_FONT_LINK",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 96
				},
				{
					"id": 1365,
					"name": "GRADIENTS",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 80
				},
				{
					"id": 1363,
					"name": "MEDIA_QUERY",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 38
				},
				{
					"id": 1370,
					"name": "SpacingProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 98
				},
				{
					"id": 1371,
					"name": "spacing2css",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 118
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						1359,
						1358,
						1369,
						1360,
						1361,
						1362,
						1364,
						1367,
						1368,
						1366,
						1365,
						1363,
						1370,
						1371
					]
				}
			],
			"sources": [
				{
					"fileName": "src/styles/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 97,
			"name": "\"styles/spacing\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/merry/projects/merrykit/src/styles/spacing.ts",
			"children": [
				{
					"id": 98,
					"name": "SpacingProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 105,
							"name": "margin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/styles/spacing.ts",
									"line": 14,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 114,
										"name": "Spacing"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 114,
											"name": "Spacing"
										}
									}
								]
							}
						},
						{
							"id": 100,
							"name": "marginBottom",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/styles/spacing.ts",
									"line": 9,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"id": 114,
								"name": "Spacing"
							}
						},
						{
							"id": 101,
							"name": "marginLeft",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/styles/spacing.ts",
									"line": 10,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 114,
								"name": "Spacing"
							}
						},
						{
							"id": 102,
							"name": "marginRight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/styles/spacing.ts",
									"line": 11,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 114,
								"name": "Spacing"
							}
						},
						{
							"id": 99,
							"name": "marginTop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/styles/spacing.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 114,
								"name": "Spacing"
							}
						},
						{
							"id": 103,
							"name": "marginX",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/styles/spacing.ts",
									"line": 12,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 114,
								"name": "Spacing"
							}
						},
						{
							"id": 104,
							"name": "marginY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/styles/spacing.ts",
									"line": 13,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 114,
								"name": "Spacing"
							}
						},
						{
							"id": 112,
							"name": "padding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/styles/spacing.ts",
									"line": 21,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 114,
										"name": "Spacing"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 114,
											"name": "Spacing"
										}
									}
								]
							}
						},
						{
							"id": 107,
							"name": "paddingBottom",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/styles/spacing.ts",
									"line": 16,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 114,
								"name": "Spacing"
							}
						},
						{
							"id": 108,
							"name": "paddingLeft",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/styles/spacing.ts",
									"line": 17,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 114,
								"name": "Spacing"
							}
						},
						{
							"id": 109,
							"name": "paddingRight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/styles/spacing.ts",
									"line": 18,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"id": 114,
								"name": "Spacing"
							}
						},
						{
							"id": 106,
							"name": "paddingTop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/styles/spacing.ts",
									"line": 15,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 114,
								"name": "Spacing"
							}
						},
						{
							"id": 110,
							"name": "paddingX",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/styles/spacing.ts",
									"line": 19,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 114,
								"name": "Spacing"
							}
						},
						{
							"id": 111,
							"name": "paddingY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/styles/spacing.ts",
									"line": 20,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 114,
								"name": "Spacing"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								105,
								100,
								101,
								102,
								99,
								103,
								104,
								112,
								107,
								108,
								109,
								106,
								110,
								111
							]
						}
					],
					"sources": [
						{
							"fileName": "src/styles/spacing.ts",
							"line": 7,
							"character": 29
						}
					]
				},
				{
					"id": 114,
					"name": "Spacing",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "src/styles/spacing.ts",
							"line": 5,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "stringLiteral",
								"value": "auto"
							}
						]
					}
				},
				{
					"id": 113,
					"name": "BASE_SPACING",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/styles/spacing.ts",
							"line": 3,
							"character": 25
						}
					],
					"type": {
						"type": "unknown",
						"name": "8"
					},
					"defaultValue": "8"
				},
				{
					"id": 115,
					"name": "getSpacingCSSString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 116,
							"name": "getSpacingCSSString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 117,
									"name": "spacing",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 114,
												"name": "Spacing"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 114,
													"name": "Spacing"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/styles/spacing.ts",
							"line": 24,
							"character": 25
						}
					]
				},
				{
					"id": 118,
					"name": "spacing2css",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 119,
							"name": "spacing2css",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 120,
									"name": "spacingProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 98,
										"name": "SpacingProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "spacing2css"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/styles/spacing.ts",
							"line": 32,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						98
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						114
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						113
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						115,
						118
					]
				}
			],
			"sources": [
				{
					"fileName": "src/styles/spacing.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				1379,
				1678,
				1748,
				1769,
				1685,
				1691,
				1703,
				1722,
				1728,
				1737,
				1372,
				1,
				7,
				21,
				53,
				83,
				1357,
				97
			]
		}
	]
}